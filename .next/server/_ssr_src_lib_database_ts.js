"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_database_ts";
exports.ids = ["_ssr_src_lib_database_ts"];
exports.modules = {

/***/ "(ssr)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   getDBService: () => (/* binding */ getDBService),\n/* harmony export */   initDB: () => (/* binding */ initDB)\n/* harmony export */ });\n/* harmony import */ var idb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! idb */ \"(ssr)/./node_modules/idb/build/index.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\nconst DB_NAME = 'specgen';\nconst DB_VERSION = 1;\n// Database instance\nlet dbInstance = null;\n// Initialize database\nasync function initDB() {\n    if (dbInstance) return dbInstance;\n    dbInstance = await (0,idb__WEBPACK_IMPORTED_MODULE_0__.openDB)(DB_NAME, DB_VERSION, {\n        upgrade (db) {\n            // Projects store\n            const projectStore = db.createObjectStore('projects', {\n                keyPath: 'id'\n            });\n            projectStore.createIndex('by-created', 'created_at');\n            // Project contexts store\n            const contextStore = db.createObjectStore('project_contexts', {\n                keyPath: 'id'\n            });\n            contextStore.createIndex('by-project-active', [\n                'project_id',\n                'is_active'\n            ]);\n            contextStore.createIndex('by-project-created', [\n                'project_id',\n                'created_at'\n            ]);\n            // Project context diffs store\n            const diffStore = db.createObjectStore('project_context_diffs', {\n                keyPath: 'id'\n            });\n            diffStore.createIndex('by-context', 'project_context_id');\n            // Spec inputs store\n            const inputStore = db.createObjectStore('spec_inputs', {\n                keyPath: 'id'\n            });\n            inputStore.createIndex('by-project-created', [\n                'project_id',\n                'created_at'\n            ]);\n            // Spec outputs store\n            const outputStore = db.createObjectStore('spec_outputs', {\n                keyPath: 'id'\n            });\n            outputStore.createIndex('by-input', 'input_id');\n            outputStore.createIndex('by-created', 'created_at');\n            // Spec revisions store\n            const revisionStore = db.createObjectStore('spec_revisions', {\n                keyPath: 'id'\n            });\n            revisionStore.createIndex('by-output', 'output_id');\n            // Spec evaluations store\n            const evalStore = db.createObjectStore('spec_evaluations', {\n                keyPath: 'id'\n            });\n            evalStore.createIndex('by-output', 'output_id');\n        }\n    });\n    return dbInstance;\n}\n// Database operations\nclass DatabaseService {\n    constructor(db){\n        this.db = db;\n    }\n    // Projects\n    async createProject(data) {\n        const project = {\n            ...data,\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            created_at: new Date()\n        };\n        await this.db.add('projects', project);\n        return project;\n    }\n    async getProject(id) {\n        return this.db.get('projects', id);\n    }\n    async getProjects() {\n        return this.db.getAllFromIndex('projects', 'by-created');\n    }\n    async updateProject(id, updates) {\n        const project = await this.getProject(id);\n        if (!project) throw new Error('Project not found');\n        const updated = {\n            ...project,\n            ...updates\n        };\n        await this.db.put('projects', updated);\n    }\n    // Project Contexts\n    async createProjectContext(data) {\n        const context = {\n            ...data,\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            created_at: new Date()\n        };\n        // If this is active, deactivate others\n        if (context.is_active) {\n            await this.deactivateProjectContexts(context.project_id);\n        }\n        await this.db.add('project_contexts', context);\n        return context;\n    }\n    async getActiveProjectContext(projectId) {\n        const contexts = await this.db.getAllFromIndex('project_contexts', 'by-project-active', [\n            projectId,\n            1\n        ]);\n        return contexts[0];\n    }\n    async getProjectContexts(projectId) {\n        return this.db.getAllFromIndex('project_contexts', 'by-project-created', [\n            projectId\n        ]);\n    }\n    async activateProjectContext(contextId) {\n        const context = await this.db.get('project_contexts', contextId);\n        if (!context) throw new Error('Context not found');\n        // Deactivate others\n        await this.deactivateProjectContexts(context.project_id);\n        // Activate this one\n        context.is_active = 1;\n        await this.db.put('project_contexts', context);\n    }\n    async deactivateProjectContexts(projectId) {\n        const activeContexts = await this.db.getAllFromIndex('project_contexts', 'by-project-active', [\n            projectId,\n            1\n        ]);\n        for (const context of activeContexts){\n            context.is_active = 0;\n            await this.db.put('project_contexts', context);\n        }\n    }\n    // Spec Inputs\n    async createSpecInput(data) {\n        const input = {\n            ...data,\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            created_at: new Date()\n        };\n        await this.db.add('spec_inputs', input);\n        return input;\n    }\n    async getSpecInput(id) {\n        return this.db.get('spec_inputs', id);\n    }\n    async getSpecInputsByProject(projectId) {\n        return this.db.getAllFromIndex('spec_inputs', 'by-project-created', [\n            projectId\n        ]);\n    }\n    // Spec Outputs\n    async createSpecOutput(data) {\n        const output = {\n            ...data,\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            created_at: new Date()\n        };\n        await this.db.add('spec_outputs', output);\n        return output;\n    }\n    async getSpecOutput(id) {\n        return this.db.get('spec_outputs', id);\n    }\n    async getSpecOutputByInput(inputId) {\n        const outputs = await this.db.getAllFromIndex('spec_outputs', 'by-input', inputId);\n        return outputs[0] // Return latest\n        ;\n    }\n    async getRecentSpecOutputs(limit = 10) {\n        const outputs = await this.db.getAllFromIndex('spec_outputs', 'by-created');\n        return outputs.slice(-limit).reverse();\n    }\n    // Spec Evaluations\n    async createSpecEvaluation(data) {\n        const evaluation = {\n            ...data,\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n            created_at: new Date()\n        };\n        await this.db.add('spec_evaluations', evaluation);\n        return evaluation;\n    }\n    async getSpecEvaluation(outputId) {\n        const evaluations = await this.db.getAllFromIndex('spec_evaluations', 'by-output', outputId);\n        return evaluations[0];\n    }\n}\n// Global database service instance\nlet dbService = null;\nasync function getDBService() {\n    if (!dbService) {\n        const db = await initDB();\n        dbService = new DatabaseService(db);\n    }\n    return dbService;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/database.ts\n");

/***/ })

};
;